// servidor/modulo-respuestas/src/test/testResponses.js

require('dotenv').config({ path: require('path').resolve(__dirname, '../../.env') });
const axios = require('axios');

const RESPONSES_URL = `http://localhost:${process.env.RESPONSES_PORT || 3005}`;

async function testResponseModule() {
    console.log('üß™ Probando M√≥dulo de Respuestas...\n');

    try {
        // 1. Test Health Check
        console.log('1Ô∏è‚É£ Probando Health Check...');
        const healthResponse = await axios.get(`${RESPONSES_URL}/api/health`);
        console.log('‚úÖ Estado:', healthResponse.data.status);
        console.log('üîó Conexiones:', healthResponse.data.connections);

        // 2. Test Plantillas
        console.log('\n2Ô∏è‚É£ Probando Plantillas...');
        const templatesResponse = await axios.get(`${RESPONSES_URL}/api/templates`);
        console.log(`‚úÖ ${templatesResponse.data.data.length} plantillas disponibles`);
        
        // Mostrar algunas plantillas
        console.log('üìã Plantillas cargadas:');
        templatesResponse.data.data.slice(0, 3).forEach(template => {
            console.log(`   - ${template.name} (${template.category})`);
        });

        // 3. Test Renderizar Plantilla
        console.log('\n3Ô∏è‚É£ Probando Renderizado de Plantilla...');
        const renderResponse = await axios.post(`${RESPONSES_URL}/api/templates/render`, {
            templateId: 'welcome_client',
            data: {
                nombre: 'Juan P√©rez'
            }
        });
        console.log('‚úÖ Plantilla renderizada:');
        console.log(renderResponse.data.data.content.substring(0, 100) + '...');

        // 4. Test Env√≠o a Cliente (simulado)
        console.log('\n4Ô∏è‚É£ Probando Env√≠o a Cliente...');
        try {
            const clientResponse = await axios.post(`${RESPONSES_URL}/api/send/client`, {
                to: '+59169173077',
                agentPhone: '+59171337051',
                message: 'Hola, gracias por tu consulta sobre propiedades.',
                responseType: 'client'
            });
            console.log('‚úÖ Respuesta enviada a cliente:', clientResponse.data.data);
        } catch (error) {
            console.log('‚ö†Ô∏è Env√≠o a cliente:', error.response?.data?.error || 'WhatsApp no conectado (esperado)');
        }

        // 5. Test Env√≠o de Sistema (simulado)
        console.log('\n5Ô∏è‚É£ Probando Env√≠o del Sistema...');
        const systemResponse = await axios.post(`${RESPONSES_URL}/api/send/system`, {
            to: '+59170000002',
            message: '‚úÖ Propiedad registrada exitosamente\n\nID: PROP001\nUbicaci√≥n: Equipetrol',
            responseType: 'system'
        });
        console.log('‚úÖ Respuesta del sistema enviada:', systemResponse.data.data);

        // 6. Test Estad√≠sticas
        console.log('\n6Ô∏è‚É£ Probando Estad√≠sticas...');
        const statsResponse = await axios.get(`${RESPONSES_URL}/api/stats`);
        console.log('üìä Estad√≠sticas:', statsResponse.data.data);

        // 7. Test Cola de Mensajes
        console.log('\n7Ô∏è‚É£ Probando Cola de Mensajes...');
        const queueResponse = await axios.get(`${RESPONSES_URL}/api/queue`);
        console.log('üìã Cola:', {
            pendientes: queueResponse.data.data.pending,
            fallidos: queueResponse.data.data.failed
        });

        console.log('\nüéâ ¬°M√≥dulo de Respuestas funcionando correctamente!');

    } catch (error) {
        if (error.code === 'ECONNREFUSED') {
            console.error('‚ùå M√≥dulo de Respuestas no est√° corriendo');
            console.error('üí° Ejecuta: npm start en la carpeta del m√≥dulo');
        } else {
            console.error('‚ùå Error:', error.response?.data || error.message);
        }
        process.exit(1);
    }
}

// Test de integraci√≥n completa
async function testCompleteFlow() {
    console.log('\nüîÑ Probando Flujo Completo de Respuesta...\n');

    try {
        // 1. Renderizar plantilla de propiedad
        console.log('1Ô∏è‚É£ Preparando informaci√≥n de propiedad...');
        const propertyTemplate = await axios.post(`${RESPONSES_URL}/api/templates/render`, {
            templateId: 'property_info',
            data: {
                nombre_propiedad: 'Casa en Equipetrol',
                ubicacion: 'Equipetrol, 3er Anillo',
                precio: '180,000',
                tamano: '200 m¬≤',
                dormitorios: 3,
                banos: 2,
                descripcion: 'Hermosa casa en zona exclusiva, con jard√≠n y piscina.',
                caracteristicas: '‚Ä¢ Piscina\n‚Ä¢ Jard√≠n amplio\n‚Ä¢ Garaje para 2 autos\n‚Ä¢ Seguridad 24/7'
            }
        });
        console.log('‚úÖ Informaci√≥n preparada');

        // 2. Simular env√≠o con plantilla
        console.log('\n2Ô∏è‚É£ Enviando respuesta con plantilla...');
        try {
            const sendResponse = await axios.post(`${RESPONSES_URL}/api/send`, {
                to: '+59169173077',
                agentPhone: '+59171337051',
                templateId: 'property_info',
                templateData: {
                    nombre_propiedad: 'Casa en Equipetrol',
                    ubicacion: 'Equipetrol, 3er Anillo',
                    precio: '180,000',
                    tamano: '200 m¬≤',
                    dormitorios: 3,
                    banos: 2,
                    descripcion: 'Hermosa casa en zona exclusiva.'
                },
                responseType: 'client',
                source: 'ia'
            });
            console.log('‚úÖ Respuesta enviada:', sendResponse.data.data);
        } catch (error) {
            console.log('‚ö†Ô∏è Error esperado (WhatsApp no conectado):', error.response?.data?.error);
        }

        // 3. Simular broadcast
        console.log('\n3Ô∏è‚É£ Probando Broadcast...');
        const broadcastResponse = await axios.post(`${RESPONSES_URL}/api/broadcast`, {
            recipients: [
                { phone: '+59160000001', type: 'client' },
                { phone: '+59160000002', type: 'client' },
                { phone: '+59160000003', type: 'client' }
            ],
            templateId: 'search_results',
            templateData: {
                total: 3,
                propiedades: [
                    {
                        nombre: 'Casa Equipetrol',
                        ubicacion: '3er Anillo',
                        precio: '180,000',
                        dormitorios: 3,
                        banos: 2
                    },
                    {
                        nombre: 'Depto Zona Norte',
                        ubicacion: 'Av. Beni',
                        precio: '95,000',
                        dormitorios: 2,
                        banos: 1
                    }
                ]
            }
        });
        console.log('‚úÖ Broadcast:', {
            total: broadcastResponse.data.data.total,
            enviados: broadcastResponse.data.data.sent,
            fallidos: broadcastResponse.data.data.failed
        });

        console.log('\n‚úÖ Flujo completo probado exitosamente');

    } catch (error) {
        console.error('‚ùå Error en flujo completo:', error.response?.data || error.message);
    }
}

// Test de plantillas
async function testTemplates() {
    console.log('\nüìã Probando Sistema de Plantillas...\n');

    try {
        // 1. Obtener plantilla espec√≠fica
        console.log('1Ô∏è‚É£ Obteniendo plantilla espec√≠fica...');
        const templateResponse = await axios.get(`${RESPONSES_URL}/api/templates/welcome_client`);
        console.log('‚úÖ Plantilla obtenida:', templateResponse.data.data.name);

        // 2. Renderizar diferentes plantillas
        console.log('\n2Ô∏è‚É£ Renderizando m√∫ltiples plantillas...');
        
        const templates = [
            {
                id: 'command_success',
                data: {
                    detalles: 'Propiedad PROP001 creada',
                    id: 'PROP001',
                    timestamp: new Date().toLocaleString()
                }
            },
            {
                id: 'new_lead',
                data: {
                    nombre: 'Mar√≠a Garc√≠a',
                    telefono: '+59160000005',
                    interes: 'Casa 3 dormitorios',
                    presupuesto: '150,000 - 200,000 Bs',
                    zona: 'Zona Norte',
                    prioridad: 'Alta'
                }
            }
        ];

        for (const template of templates) {
            const rendered = await axios.post(`${RESPONSES_URL}/api/templates/render`, {
                templateId: template.id,
                data: template.data
            });
            console.log(`‚úÖ ${template.id} renderizada`);
        }

        console.log('\n‚úÖ Sistema de plantillas funcionando correctamente');

    } catch (error) {
        console.error('‚ùå Error en plantillas:', error.response?.data || error.message);
    }
}

// Ejecutar todas las pruebas
async function runAllTests() {
    console.log('üöÄ Iniciando pruebas del M√≥dulo de Respuestas\n');
    console.log('‚ö†Ô∏è  Aseg√∫rate de que est√©n corriendo:');
    console.log('   - M√≥dulo de Respuestas (puerto 3005)');
    console.log('   - M√≥dulo WhatsApp (puerto 3001) - opcional');
    console.log('   - Base de datos (puerto 3006) - opcional\n');

    await testResponseModule();
    await testTemplates();
    await testCompleteFlow();

    console.log('\n‚ú® ¬°Todas las pruebas completadas!');
    console.log('\nüìã Endpoints principales:');
    console.log(`   - GET  ${RESPONSES_URL}/api/health`);
    console.log(`   - POST ${RESPONSES_URL}/api/send`);
    console.log(`   - POST ${RESPONSES_URL}/api/send/client`);
    console.log(`   - POST ${RESPONSES_URL}/api/send/system`);
    console.log(`   - POST ${RESPONSES_URL}/api/broadcast`);
    console.log(`   - GET  ${RESPONSES_URL}/api/templates`);
    console.log(`   - POST ${RESPONSES_URL}/api/templates/render`);
}

// Ejecutar tests
runAllTests().catch(console.error);